/*
Created: 27/8/2021
Modified: 5/9/2021
Model: Oracle 18c
Database: Oracle 18c
*/


-- Drop relationships section -------------------------------------------------

ALTER TABLE ctrl_registro DROP CONSTRAINT ctrl_registrofk_01
;
ALTER TABLE ctrl_historial DROP CONSTRAINT ctrl_historialfk_01
;
ALTER TABLE ctrl_empleado DROP CONSTRAINT ctrl_empleadofk_01
;
ALTER TABLE ctrl_rol DROP CONSTRAINT ctrl_rolfk_01
;




-- Drop keys for tables section -------------------------------------------------

ALTER TABLE ctrl_registro DROP CONSTRAINT PK_ctrl_registro
;
ALTER TABLE ctrl_historial DROP CONSTRAINT PK_ctrl_historial
;
ALTER TABLE ctrl_rol DROP CONSTRAINT PK_ctrl_rol
;
ALTER TABLE ctrl_cempleado DROP CONSTRAINT PK_ctrl_cempleado
;
ALTER TABLE ctrl_empleado DROP CONSTRAINT PK_ctrl_empleado
;
ALTER TABLE ctrl_persona DROP CONSTRAINT PK_ctrl_persona
;


-- Drop indexes section -------------------------------------------------

DROP INDEX IX_Relationship71
;
DROP INDEX IX_Relationship48
;
DROP INDEX IX_Relationship46
;
DROP INDEX IX_Relationship47
;


-- Drop tables section ---------------------------------------------------

DROP TABLE ctrl_registro
;
DROP TABLE ctrl_historial
;
DROP TABLE ctrl_rol
;
DROP TABLE ctrl_cempleado
;
DROP TABLE ctrl_empleado
;
DROP TABLE ctrl_persona
;

-- Create tables section -------------------------------------------------

-- Table ctrl_persona

CREATE TABLE ctrl_persona(
  prs_id Integer NOT NULL,
  prs_nombre Varchar2(50 ) NOT NULL,
  prs_apellido Varchar2(50 ) NOT NULL,
  prs_cedula Number NOT NULL,
  prs_fechanacimiento Date NOT NULL,
  prs_foto Blob NOT NULL
)
;

-- Add keys for table ctrl_persona

ALTER TABLE ctrl_persona ADD CONSTRAINT PK_ctrl_persona PRIMARY KEY (prs_id)
;

-- Table and Columns comments section

COMMENT ON COLUMN ctrl_persona.prs_id IS 'Id de la persona  '
;
COMMENT ON COLUMN ctrl_persona.prs_nombre IS 'Nombre de la persona'
;
COMMENT ON COLUMN ctrl_persona.prs_apellido IS 'Apellido de la persona '
;
COMMENT ON COLUMN ctrl_persona.prs_cedula IS 'Cedula de la persona'
;
COMMENT ON COLUMN ctrl_persona.prs_fechanacimiento IS 'Fecha de nacimiento 
'
;
COMMENT ON COLUMN ctrl_persona.prs_foto IS 'Foto de la persona
'
;

-- Table ctrl_empleado

CREATE TABLE ctrl_empleado(
  emp_id Integer NOT NULL,
  prs_id Integer NOT NULL,
  emp_horastrabajadas Integer DEFAULT 0 NOT NULL
)
;

-- Create indexes for table ctrl_empleado

CREATE INDEX IX_Relationship47 ON ctrl_empleado (prs_id)
;

-- Add keys for table ctrl_empleado

ALTER TABLE ctrl_empleado ADD CONSTRAINT PK_ctrl_empleado PRIMARY KEY (emp_id)
;

-- Table and Columns comments section

COMMENT ON COLUMN ctrl_empleado.emp_id IS 'Id del empleado'
;
COMMENT ON COLUMN ctrl_empleado.prs_id IS 'Id de la persona'
;
COMMENT ON COLUMN ctrl_empleado.emp_horastrabajadas IS 'horas trabajadas'
;

-- Table ctrl_cempleado

CREATE TABLE ctrl_cempleado(
  cemp_id Integer NOT NULL
)
;

-- Add keys for table ctrl_cempleado

ALTER TABLE ctrl_cempleado ADD CONSTRAINT PK_ctrl_cempleado PRIMARY KEY (cemp_id)
;

-- Table ctrl_rol

CREATE TABLE ctrl_rol(
  rl_id Integer NOT NULL,
  rol_pass Varchar2(30 ) NOT NULL,
  emp_id Integer NOT NULL
)
;

-- Create indexes for table ctrl_rol

CREATE INDEX IX_Relationship46 ON ctrl_rol (emp_id)
;

-- Add keys for table ctrl_rol

ALTER TABLE ctrl_rol ADD CONSTRAINT PK_ctrl_rol PRIMARY KEY (rl_id)
;

-- Table and Columns comments section

COMMENT ON COLUMN ctrl_rol.rl_id IS 'id del rol'
;
COMMENT ON COLUMN ctrl_rol.rol_pass IS 'contraseña del admin'
;
COMMENT ON COLUMN ctrl_rol.emp_id IS 'id del empleado'
;

-- Table ctrl_historial

CREATE TABLE ctrl_historial(
  his_id Integer NOT NULL,
  emp_id Integer NOT NULL
)
;

-- Create indexes for table ctrl_historial

CREATE INDEX IX_Relationship48 ON ctrl_historial (emp_id)
;

-- Add keys for table ctrl_historial

ALTER TABLE ctrl_historial ADD CONSTRAINT PK_ctrl_historial PRIMARY KEY (his_id)
;

-- Table and Columns comments section

COMMENT ON COLUMN ctrl_historial.his_id IS 'historial id'
;
COMMENT ON COLUMN ctrl_historial.emp_id IS 'id del empleado'
;

-- Table ctrl_registro

CREATE TABLE ctrl_registro(
  reg_id Integer NOT NULL,
  his_id Integer NOT NULL,
  reg_inicio Date,
  reg_final Date,
  reg_completado Varchar2(1 ),
  CONSTRAINT reg_completadock01 CHECK (reg_completado in ('C','I'))
)
;

-- Create indexes for table ctrl_registro

CREATE INDEX IX_Relationship71 ON ctrl_registro (his_id)
;

-- Add keys for table ctrl_registro

ALTER TABLE ctrl_registro ADD CONSTRAINT PK_ctrl_registro PRIMARY KEY (reg_id)
;

-- Table and Columns comments section

COMMENT ON COLUMN ctrl_registro.reg_id IS 'id del registro'
;
COMMENT ON COLUMN ctrl_registro.his_id IS 'id del historial'
;
COMMENT ON COLUMN ctrl_registro.reg_inicio IS 'date inicio'
;
COMMENT ON COLUMN ctrl_registro.reg_final IS 'date final'
;
COMMENT ON COLUMN ctrl_registro.reg_completado IS 'C= Completo
I= Icompleto'
;


-- Trigger for sequence seq_persona01 for column prs_id in table ctrl_persona ---------
CREATE OR REPLACE TRIGGER ctrl_persona_tgr01 BEFORE INSERT
ON ctrl_persona FOR EACH ROW
BEGIN
  IF :new.prs_id IS NULL OR :new.prs_id < 1 THEN
  :new.prs_id := ctrl_persona_seq01.nextval;
  END IF;
END;
/
CREATE OR REPLACE TRIGGER ctrl_persona_tgr02 AFTER UPDATE OF prs_id
ON ctrl_persona FOR EACH ROW
BEGIN
  RAISE_APPLICATION_ERROR(-20010,'Cannot update column prs_id in table ctrl_persona as it uses sequence.');
END;
/


-- Trigger for sequence seq_empleado01 for column emp_id in table ctrl_empleado ---------
CREATE OR REPLACE TRIGGER ctrl_empleado_tgr01 BEFORE INSERT
ON ctrl_empleado FOR EACH ROW
BEGIN
  IF :new.emp_id IS NULL OR :new.emp_id <1 THEN
  :new.emp_id := ctrl_empleado_seq01.nextval;
  END IF;
END;
/
CREATE OR REPLACE TRIGGER ctrl_empleado_tgr02 AFTER UPDATE OF emp_id
ON ctrl_empleado FOR EACH ROW
BEGIN
  RAISE_APPLICATION_ERROR(-20010,'Cannot update column emp_id in table ctrl_empleado as it uses sequence.');
END;
/

-- Trigger for sequence seq_rol01 for column rl_id in table ctrl_rol ---------
CREATE OR REPLACE TRIGGER ctrl_rol_tgr01 BEFORE INSERT
ON ctrl_rol FOR EACH ROW
BEGIN
  IF :new.rl_id IS NULL OR :new.rl_id>1
  :new.rl_id := seq_rol01.nextval;
  END IF;
END;
/

CREATE OR REPLACE TRIGGER ctrl_rol_tgr02 AFTER UPDATE OF rl_id
ON ctrl_rol FOR EACH ROW
BEGIN
  RAISE_APPLICATION_ERROR(-20010,'Cannot update column rl_id in table ctrl_rol as it uses sequence.');
END;
/


-- Trigger for sequence seq_historial01 for column his_id in table ctrl_historial ---------
CREATE OR REPLACE TRIGGER ctrl_historial_tgr01 BEFORE INSERT
ON ctrl_historial FOR EACH ROW
BEGIN
  IF :new.his_id IS NULL OR :new.his_id>1
  :new.his_id := seq_historial01.nextval;
  END IF;
END;
/
CREATE OR REPLACE TRIGGER ctrl_historial_tgr02 AFTER UPDATE OF his_id
ON ctrl_historial FOR EACH ROW
BEGIN
  RAISE_APPLICATION_ERROR(-20010,'Cannot update column his_id in table ctrl_historial as it uses sequence.');
END;
/

-- Trigger for sequence seq_registro01 for column reg_id in table ctrl_registro ---------
CREATE OR REPLACE TRIGGER ctrl_registro_tgr01 BEFORE INSERT
ON ctrl_registro FOR EACH ROW
BEGIN
  IF :new.reg_id IS NULL OR :new.reg_id>1
  :new.reg_id := seq_registro01.nextval;
END;
/
CREATE OR REPLACE TRIGGER ctrl_registro_tgr02 AFTER UPDATE OF reg_id
ON ctrl_registro FOR EACH ROW
BEGIN
  RAISE_APPLICATION_ERROR(-20010,'Cannot update column reg_id in table ctrl_registro as it uses sequence.');
END;
/
-- Create foreign keys (relationships) section ------------------------------------------------- 

ALTER TABLE ctrl_rol ADD CONSTRAINT ctrl_rolfk_01 FOREIGN KEY (emp_id) REFERENCES ctrl_empleado (emp_id)
;



ALTER TABLE ctrl_empleado ADD CONSTRAINT ctrl_empleadofk_01 FOREIGN KEY (prs_id) REFERENCES ctrl_persona (prs_id)
;



ALTER TABLE ctrl_historial ADD CONSTRAINT ctrl_historialfk_01 FOREIGN KEY (emp_id) REFERENCES ctrl_empleado (emp_id)
;



ALTER TABLE ctrl_registro ADD CONSTRAINT ctrl_registrofk_01 FOREIGN KEY (his_id) REFERENCES ctrl_historial (his_id)
;





